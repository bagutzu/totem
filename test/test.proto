syntax = "proto3";
option go_package = "github.com/kralicky/totem/test";
package test;
import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "github.com/kralicky/totem/totem.proto";
import "github.com/kralicky/totem/extensions.proto";

service Test {
  rpc TestStream(stream totem.RPC) returns (stream totem.RPC);
}

service Increment {
  rpc Inc(Number) returns (Number);
}

service Decrement {
  rpc Dec(Number) returns (Number);
}

service Hash {
  rpc Hash(String) returns (String);
}

service Notify {
  rpc Notify(String) returns (google.protobuf.Empty) {
    option (totem.qos) = {
      replicationStrategy: Broadcast
    };
  }
}

service Multiply {
  rpc Mul(Operands) returns (Number);
}

service Error {
  rpc Error(ErrorRequest) returns (google.protobuf.Empty);
}

service Echo {
  rpc Echo(Bytes) returns (Bytes);
}

service Sleep {
  rpc Sleep(SleepRequest) returns (google.protobuf.Empty) {
    option (totem.qos) = {
      replicationStrategy: Broadcast
    };
  }
}

message SleepRequest {
  google.protobuf.Duration duration = 1;
  string filter = 2;
}

message ErrorRequest {
  bool ReturnError = 1;
}

message Number {
  int64 Value = 1;
}

message String {
  string Str = 1;
}

message Bytes {
  bytes Data = 1;
}

message Operands {
  int32 A = 1;
  int32 B = 2;
}
